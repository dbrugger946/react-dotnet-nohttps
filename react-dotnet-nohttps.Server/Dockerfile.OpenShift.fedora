#FROM registry.access.redhat.com/ubi8/dotnet-80-runtime AS base
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app

#FROM registry.access.redhat.com/ubi8/dotnet-80 AS build
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
USER 0

ARG BUILD_CONFIGURATION=Release
WORKDIR /src

COPY noclient-react-dotnet-nohttps.Server.csproj react-dotnet-nohttps.Server/
# COPY react-dotnet-nohttps.Server/noclient-react-dotnet-nohttps.Server.csproj react-dotnet-nohttps.Server

RUN dotnet restore react-dotnet-nohttps.Server/noclient-react-dotnet-nohttps.Server.csproj
COPY . .
RUN pwd
RUN ls .
WORKDIR /src/react-dotnet-nohttps.Server
RUN dotnet build ./noclient-react-dotnet-nohttps.Server.csproj -c $BUILD_CONFIGURATION -o /app/build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish ./noclient-react-dotnet-nohttps.Server.csproj -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# This stage is used in production or when running from VS in regular mode (Default when not using the Debug configuration)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# for OCP deployment to deal with anyuid privileges
USER root
RUN chown -R 1001:0 /app
USER 1001
EXPOSE 8080

ENTRYPOINT ["dotnet", "noclient-react-dotnet-nohttps.Server.dll"]
